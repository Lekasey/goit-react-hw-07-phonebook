{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebooks-reducer.js","redux/phonebook/phonebook-selectors.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/ContactList/ContactList.container.js","Components/Filter/Filter.js","Components/Form/Form.js","App.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","newContact","get","then","allContacts","normalizedNewContact","toLowerCase","filter","contact","includes","length","presentCheck","data","post","catch","error","alert","contactId","a","delete","contacts","createReducer","_","payload","state","id","loading","combineReducers","getContacts","phonebook","getIsLoading","isLoading","getError","getFilter","getVisibleContacts","createSelector","normalizedFilter","ContactListItem","onClick","className","type","ContactList","onDeleteContact","map","connect","phonebookOperations","value","onChange","e","currentTarget","Form","submitHandler","preventDefault","props","onSubmit","reset","handleInputChange","setState","this","pattern","title","required","Component","App","fetchContacts","color","height","width","defaultProps","PropTypes","array","store","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","configureStore","reducer","phonebookReducer","middleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b328af58.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'phonebook/fetchContactRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'phonebook/fetchContactSuccess',\n);\nexport const fetchContactsError = createAction('phonebook/fetchContactError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phonebook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const deleteContact = createAction('phonebook/deleteContact');\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst presentCheck = (allContacts, newContact) => {\n  const normalizedNewContact = newContact.name.toLowerCase();\n  const nameSearch = allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedNewContact),\n  );\n  return nameSearch.length;\n};\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => dispatch => {\n  const newContact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n  axios.get('/contacts').then(({ data }) => {\n    if (presentCheck(data, newContact)) {\n      alert('Contact with such name already exists');\n      dispatch(addContactError('Error'));\n    } else {\n      axios\n        .post('/contacts', newContact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error)));\n    }\n  });\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, fetchContacts };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsRequest]: () => null,\n  [fetchContactsError]: (_, { payload }) =>\n    `${payload}. Some problem while loading your contacts. Try again`,\n  [addContactRequest]: () => null,\n  [addContactError]: (_, { payload }) =>\n    `${payload}. Failed adding new contact. Try again`,\n  [deleteContactRequest]: () => null,\n  [deleteContactError]: (_, { payload }) =>\n    `${payload}. Something went wrong. Try to delete your contact once more`,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.phonebook.contacts;\n\nexport const getIsLoading = state => state.phonebook.isLoading;\n\nexport const getError = state => state.phonebook.error;\n\nexport const getFilter = state => state.phonebook.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return visibleContacts;\n  },\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactListItem.css';\n\nconst ContactListItem = ({ name, number, onClick }) => {\n  return (\n    <li className=\"ContactListItem\">\n      <p>\n        {name}: <span>{number}</span>\n      </p>\n      <button className=\"button\" type=\"button\" onClick={onClick}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\nimport './ContactList.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onClick={() => onDeleteContact(id)}\n        ></ContactListItem>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport { phonebookOperations } from '../../redux/phonebook';\nimport ContactList from './ContactList';\nimport { getVisibleContacts } from '../../redux/phonebook';\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(phonebookOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook';\nimport { getFilter } from '../../redux/phonebook';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          className=\"filterInput\"\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Form.css';\nimport { connect } from 'react-redux';\nimport { phonebookOperations } from '../../redux/phonebook';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"form\" onSubmit={this.submitHandler}>\n        <label className=\"label\">\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={name}\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className=\"label\">\n          Number\n          <input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            value={number}\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button className=\"button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(phonebookOperations.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\nimport Form from './Components/Form';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { phonebookOperations } from './redux/phonebook';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { getContacts, getIsLoading, getError } from './redux/phonebook';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, isLoading, error } = this.props;\n    return (\n      <div>\n        {error && (\n          <div className=\"Notify\">\n            <h2 className=\"Notify__text\">{error}</h2>\n          </div>\n        )}\n        <h1>Phonebook</h1>\n\n        <Form />\n        <div className=\"wrapper\">\n          <h2>Contacts</h2>\n          <div className=\"flexbox\">\n            <Filter />\n            {isLoading && (\n              <Loader type=\"Puff\" color=\"#00BFFF\" height={25} width={25} />\n            )}\n          </div>\n          {contacts.length > 0 ? (\n            <ContactList />\n          ) : (\n            <p className=\"noContacts\">No contacts added yet</p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nApp.defaultProps = {\n  contacts: PropTypes.array,\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n  isLoading: getIsLoading(state),\n  error: getError(state),\n});\n\nconst mapDispatchoProps = dispatch => ({\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\n});\nexport default connect(mapStateToProps, mapDispatchoProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { phonebookReducer } from './phonebook';\n\nimport logger from 'redux-logger';\n// import storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const contactsPersistConfig = {\n//   key: 'phonebook',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst store = configureStore({\n  reducer: {\n    phonebook:\n      // persistReducer(contactsPersistConfig,\n      phonebookReducer,\n    // ),\n  },\n  middleware:\n    process.env.NODE_ENV === 'development'\n      ? middleware\n      : getDefaultMiddleware(),\n  devTools: process.env.NODE_ENV === 'development',\n});\n// const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n// { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}